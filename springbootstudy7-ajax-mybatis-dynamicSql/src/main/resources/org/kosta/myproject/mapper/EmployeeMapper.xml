<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.myproject.mapper.EmployeeMapper">
	<!-- 부모(참조대상, has a 관계를 통해 추출할) 부분을 입력 -->
	<resultMap type="org.kosta.myproject.vo.EmployeeVO" id="employeeResultMap">
		<result column="department_no" property="departmentVO.departmentNo"/>
		<result column="department_name" property="departmentVO.departmentName"/>
		<result column="location" property="departmentVO.location"/>
	</resultMap>
	<select id="findEmployeeByNo" parameterType="int" resultMap="employeeResultMap">
		select e.employee_no,e.name,e.salary,d.department_name,d.department_name,d.location
		from springboot_employee e
		inner join springboot_department d on e.department_no=d.department_no
		where  e.employee_no=#{employeeNo}
	</select>
	<select id="findEmployeeListDynamicSql" parameterType="org.kosta.myproject.vo.EmployeeVO" resultMap="employeeResultMap">
		select e.employee_no,e.name,e.salary,d.department_name,d.department_name,d.location
		from springboot_employee e
		inner join springboot_department d on e.department_no=d.department_no
		<where>
			<!--/*parameter Type에서 그대로 인스턴스 변수를 사용한다.*/-->
			<if test="departmentVO!=null and departmentVO.departmentNo!=0">
				e.department_no=#{departmentVO.departmentNo}
			</if>
			<if test="name!=null and name!=''">
				and name like '%' || #{name} || '%'
			</if>
		</where>
	</select>
</mapper>